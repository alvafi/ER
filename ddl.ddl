-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-04-11 13:14:48 YEKT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE аренда (
    дата_начала_аренды  DATE NOT NULL,
    дата_конца_аренды   DATE,
    вид_аренды          VARCHAR2(30) NOT NULL,
    rent_id             NUMBER NOT NULL,
    машина_car_id       NUMBER NOT NULL,
    зона_аренды_area_id NUMBER NOT NULL,
    клиент_client_id    NUMBER NOT NULL
);

ALTER TABLE аренда
    ADD CHECK ( вид_аренды IN ( 'Длинная аренда', 'Короткая аренда' ) );

COMMENT ON COLUMN аренда.дата_начала_аренды IS
    'Дата начала аренды, момент с которого начинается аренда автомобиля';

COMMENT ON COLUMN аренда.дата_конца_аренды IS
    'Дата конца аренды, дата, когда заканчивается аренда автомобиля';

COMMENT ON COLUMN аренда.вид_аренды IS
    'Вид аренды, определяющий тарифный план';

CREATE UNIQUE INDEX rent__idx ON
    аренда (
        машина_car_id
    ASC );

CREATE UNIQUE INDEX rent__idxv1 ON
    аренда (
        клиент_client_id
    ASC );

ALTER TABLE аренда ADD CONSTRAINT rent_pk PRIMARY KEY ( rent_id );

CREATE TABLE зона_аренды (
    area_id    NUMBER NOT NULL,
    страна     VARCHAR2(100) NOT NULL,
    регион     VARCHAR2(100) NOT NULL,
    улица      VARCHAR2(100) NOT NULL,
    номер_дома VARCHAR2(100) NOT NULL
);

COMMENT ON COLUMN зона_аренды.страна IS
    'Страна, в которой можно арендовать и использовать автомобиль';

COMMENT ON COLUMN зона_аренды.регион IS
    'Регион, в котором можно арендовать и использовать автомобиль';

COMMENT ON COLUMN зона_аренды.улица IS
    'Часть адреса, возможного расположения арендованного автомобиля';

COMMENT ON COLUMN зона_аренды.номер_дома IS
    'Часть адреса, возможного расположения арендованного автомобиля';

ALTER TABLE зона_аренды ADD CONSTRAINT area_pk PRIMARY KEY ( area_id );

CREATE TABLE клиент (
    client_id                               NUMBER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    номер_водительское_удостоверения        VARCHAR2(100) NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    дата_выдачи_водительского_удостоверения DATE NOT NULL,
    категория_прав                          VARCHAR2(3) NOT NULL,
    фамилия                                 VARCHAR2(100) NOT NULL,
    имя                                     VARCHAR2(100) NOT NULL,
    отчество                                VARCHAR2(100),
    дата_рождения                           DATE NOT NULL,
    страна                                  VARCHAR2(100) NOT NULL,
    регион                                  VARCHAR2(100) NOT NULL,
    улица                                   VARCHAR2(100) NOT NULL,
    номер_дома                              VARCHAR2(100) NOT NULL,
    номер_и_серия_паспорта                  INTEGER NOT NULL,
    название_страховой_компании             VARCHAR2(50) NOT NULL,
    номер_полиса_осаго                      VARCHAR2(100) NOT NULL,
    дата_оформления_полиса_осаго            DATE NOT NULL
);

COMMENT ON COLUMN клиент.номер_водительское_удостоверения IS
    'Номер водительского удостоверения клиента, определяет его возможность арендовать автомобиль';

COMMENT ON COLUMN клиент.дата_выдачи_водительского_удостоверения IS
    'Дата выдачи водительского,  необходима для проверки действителен ли документа';

COMMENT ON COLUMN клиент.категория_прав IS
    'Категория прав определяет марку автомобиля, который может арендовать клиент';

COMMENT ON COLUMN клиент.фамилия IS
    'Фамилия клиента';

COMMENT ON COLUMN клиент.имя IS
    'Имя клиента';

COMMENT ON COLUMN клиент.отчество IS
    'Отчество клиента';

COMMENT ON COLUMN клиент.дата_рождения IS
    'Дата рождения клиента определяет его возможность арендовать автомобиль';

COMMENT ON COLUMN клиент.страна IS
    'Страна, в которой клиент хочет арендовать автомобиль';

COMMENT ON COLUMN клиент.регион IS
    'Регион, где клиент хочет арендовать автомобиль';

COMMENT ON COLUMN клиент.улица IS
    'Часть адреса, где клиент хочет арендовать автомобиль';

COMMENT ON COLUMN клиент.номер_дома IS
    'Часть адреса, где клиент хочет арендовать автомобиль';

COMMENT ON COLUMN клиент.номер_и_серия_паспорта IS
    'Номер и серия паспорта клиента';

COMMENT ON COLUMN клиент.название_страховой_компании IS
    'Название страховой компании позволяет связаться с данным учреждением, чтоб узнать количество ПДД клиента, что определяет тарифный план и марку машины'
    ;

COMMENT ON COLUMN клиент.номер_полиса_осаго IS
    'Номер полиса ОСАГО клиента, позволяет определить его возможность арендовать автомобиль ';

COMMENT ON COLUMN клиент.дата_оформления_полиса_осаго IS
    'Дата оформления полиса ОСАГО клиента позволяет определить действителен ли документ';

ALTER TABLE клиент ADD CONSTRAINT client_pk PRIMARY KEY ( client_id );

CREATE TABLE машина (
    car_id                  NUMBER NOT NULL,
    идентификационный_номер VARCHAR2(17) NOT NULL,
    марка                   VARCHAR2(40) NOT NULL,
    государственный_номер   VARCHAR2(20) NOT NULL,
    "GPS-трекер"            VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN машина.идентификационный_номер IS
    'Идентификационный номер автомобиля, т.е. VIN';

COMMENT ON COLUMN машина.марка IS
    'Марка автомобиля';

COMMENT ON COLUMN машина.государственный_номер IS
    'Государственные номера автомобиля';

COMMENT ON COLUMN машина."GPS-трекер" IS
    'Код, который помогает получать данные GPS-трекера, установленного в автомобиле';

ALTER TABLE машина ADD CONSTRAINT car_pk PRIMARY KEY ( car_id );


--  ERROR: UK name length exceeds maximum allowed length(30) 
ALTER TABLE машина ADD CONSTRAINT машина_идентификационный_номер_un UNIQUE ( идентификационный_номер );

CREATE TABLE отзыв (
    вид_отзыва       VARCHAR2(50) NOT NULL,
    оценка           INTEGER NOT NULL,
    rewiew_id        NUMBER NOT NULL,
    клиент_client_id NUMBER NOT NULL,
    машина_car_id    NUMBER NOT NULL
);

ALTER TABLE отзыв
    ADD CHECK ( вид_отзыва IN ( 'Жалоба', 'Пожелание' ) );

ALTER TABLE отзыв ADD CHECK ( оценка BETWEEN 1 AND 5 );

COMMENT ON TABLE отзыв IS
    'Сущность, отвечающая за отзывы клиентов после аренды';

COMMENT ON COLUMN отзыв.вид_отзыва IS
    'Отзывы подразделяются на два типа. Пожелание, где клиент оставляет комментарий, что можно улушить, и жалоба, где клиент оставляет комментарий, что его не устроило в аренде автомобиля'
    ;

COMMENT ON COLUMN отзыв.оценка IS
    'Оценка арендыв 5-ти бальной системе оценивания';

ALTER TABLE отзыв ADD CONSTRAINT rewiew_pk PRIMARY KEY ( rewiew_id );

CREATE TABLE старая_персональная_информация (
    дата_изменения                          DATE NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    номер_водительское_удостоверения        VARCHAR2(100),
    название_страховой_компании             VARCHAR2(100), 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    дата_выдачи_водительского_удостоверения DATE,
    old_pers_data_id                        NUMBER NOT NULL,
    клиент_client_id                        NUMBER NOT NULL
);

COMMENT ON COLUMN старая_персональная_информация.дата_изменения IS
    'Дата изменения персональных данных клиента на новые';

COMMENT ON COLUMN старая_персональная_информация.номер_водительское_удостоверения IS
    'Старый номер водительского удостоверения клиента';

COMMENT ON COLUMN старая_персональная_информация.название_страховой_компании IS
    'Названия предыдущей страховой компании, позволяет узнавать количество нарушений  ПДД, в случае замены страховой компании';

COMMENT ON COLUMN старая_персональная_информация.дата_выдачи_водительского_удостоверения IS
    'Старая дата выдачи водительского удостоверения клиента';

ALTER TABLE старая_персональная_информация ADD CONSTRAINT old_pers_data_pk PRIMARY KEY ( old_pers_data_id );

ALTER TABLE старая_персональная_информация
    ADD CONSTRAINT old_pers_data_client_fk FOREIGN KEY ( клиент_client_id )
        REFERENCES клиент ( client_id );

ALTER TABLE аренда
    ADD CONSTRAINT rent_area_fk FOREIGN KEY ( зона_аренды_area_id )
        REFERENCES зона_аренды ( area_id );

ALTER TABLE аренда
    ADD CONSTRAINT rent_car_fk FOREIGN KEY ( машина_car_id )
        REFERENCES машина ( car_id );

ALTER TABLE аренда
    ADD CONSTRAINT rent_client_fk FOREIGN KEY ( клиент_client_id )
        REFERENCES клиент ( client_id );

ALTER TABLE отзыв
    ADD CONSTRAINT rewiew_car_fk FOREIGN KEY ( машина_car_id )
        REFERENCES машина ( car_id );

ALTER TABLE отзыв
    ADD CONSTRAINT rewiew_client_fk FOREIGN KEY ( клиент_client_id )
        REFERENCES клиент ( client_id );

CREATE SEQUENCE rent_rent_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rent_rent_id_trg BEFORE
    INSERT ON аренда
    FOR EACH ROW
    WHEN ( new.rent_id IS NULL )
BEGIN
    :new.rent_id := rent_rent_id_seq.nextval;
END;
/

CREATE SEQUENCE area_area_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER area_area_id_trg BEFORE
    INSERT ON зона_аренды
    FOR EACH ROW
    WHEN ( new.area_id IS NULL )
BEGIN
    :new.area_id := area_area_id_seq.nextval;
END;
/

CREATE SEQUENCE client_client_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER client_client_id_trg BEFORE
    INSERT ON клиент
    FOR EACH ROW
    WHEN ( new.client_id IS NULL )
BEGIN
    :new.client_id := client_client_id_seq.nextval;
END;
/

CREATE SEQUENCE car_car_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER car_car_id_trg BEFORE
    INSERT ON машина
    FOR EACH ROW
    WHEN ( new.car_id IS NULL )
BEGIN
    :new.car_id := car_car_id_seq.nextval;
END;
/

CREATE SEQUENCE rewiew_rewiew_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rewiew_rewiew_id_trg BEFORE
    INSERT ON отзыв
    FOR EACH ROW
    WHEN ( new.rewiew_id IS NULL )
BEGIN
    :new.rewiew_id := rewiew_rewiew_id_seq.nextval;
END;
/

CREATE SEQUENCE old_pers_data_old_pers_data_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER old_pers_data_old_pers_data_id BEFORE
    INSERT ON старая_персональная_информация
    FOR EACH ROW
    WHEN ( new.old_pers_data_id IS NULL )
BEGIN
    :new.old_pers_data_id := old_pers_data_old_pers_data_id.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             2
-- ALTER TABLE                             16
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   5
-- WARNINGS                                 0
